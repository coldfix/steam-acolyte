name: Windows Installer
on:
  push:
  pull_request:

jobs:
  build:
    name: build
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - run: python -m pip install -U pip
      - run: python -m pip install pyqt5
      - run: python -m pip install -e .

      - run: python -m pip install flake8 pyinstaller
      - run: flake8

      # Create single file EXE redistributable:
      - run: choco install -y imagemagick
      - name: Build icons
        shell: cmd
        run: |
          call refreshenv
          magick -background none steam_acolyte/acolyte.svg -resize 16x16 _16.ico
          magick -background none steam_acolyte/acolyte.svg -resize 32x32 _32.ico
          magick -background none steam_acolyte/acolyte.svg -resize 48x48 _48.ico
          magick -background none steam_acolyte/acolyte.svg -resize 64x64 _64.ico
          magick -background none steam_acolyte/acolyte.svg -resize 128x128 _128.ico
          magick -background none steam_acolyte/acolyte.svg -resize 256x256 _256.ico
          magick -background none _16.ico _32.ico _48.ico _64.ico _128.ico _256.ico acolyte.ico

      - run: pyinstaller steam-acolyte.spec

      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist

  deploy:
    name: Upload installer to github
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v') && success()

    steps:
      - uses: actions/download-artifact@v4.1.7
        with:
          name: dist
          path: dist

      - name: Extract tag name
        id: tag
        run: echo "::set-output name=tag::${GITHUB_REF##*/}"

      - name: Rename installer
        run: mv dist/steam-acolyte.exe dist/steam-acolyte-${{ steps.tag.outputs.tag }}.exe

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ steps.tag.outputs.tag }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/steam-acolyte-${{ steps.tag.outputs.tag }}.exe
          asset_name: steam-acolyte-${{ steps.tag.outputs.tag }}.exe
          asset_content_type: application/octet-stream
